package com.github.exiostorm.main;

import org.lwjgl.glfw.*;
import org.lwjgl.opengl.*;

import static org.lwjgl.glfw.GLFW.*;
import static org.lwjgl.opengl.GL11.*;

import com.github.exiostorm.graphics.Texture;
import com.github.exiostorm.graphics.Window;
//Summary: was trying to use OpenGL, but that may take too long.
public class Game2 {
	Window window;
	public static final int WIDTH = 360;
	public static final int HEIGHT = 240;
	public static final int SCALE = 2;
	private Texture bgTexture;
	
	//Camera camera;
	//World world;
	//TileRenderer tileRenderer;
	//Shader shader;
	//Player player;
	
	public Game2(){
		init();
		loop();
		System.out.println("terminated");
		
		glfwTerminate();
	}
	
	private void init(){
		GLFWErrorCallback.createPrint(System.err).set();
		if (!glfwInit()) throw new IllegalStateException("Failed to Initialize");
		
		window = new Window();
		window.setName("GameTest");
		window.setSize(WIDTH * SCALE, HEIGHT * SCALE);
		window.setFullScreen(false);
		window.init();
		
	}
	
	private void loop(){
		int i = 0;
		GL.createCapabilities();// these arent being looped, loop starts at "while" below.
		glClearColor(0,0,0,0);
		System.out.println("OpenGL: " + glGetString(GL_VERSION));
		bgTexture = new Texture("Resources/Sprites/Player/PlayerSprites.png");
		
		//world = new World(128, 128, 64);
		//tileRenderer = new TileRenderer();
		//shader = new Shader("shader");
		//player = new Player();
		//camera = new Camera(window.getWidth(), window.getHeight());
		//camera.setPosition(new Vector3f(0, 0, 0));
		
		glfwSetKeyCallback(window.getWindow(), (window, key, scancode, action, mods) -> {
			if ( key == GLFW_KEY_ESCAPE && action == GLFW_RELEASE ) glfwSetWindowShouldClose(window, true);
			
		});
		//TODO our game loop goes here.
		while(!window.shouldClose()){
			render();
			window.pollEvents();
			
			//player.update(144, window, camera, world);
			//world.correctCamera(window, camera);
			//world.render(tileRenderer, shader, camera, window);
			//player.render(shader, camera);
			//world.setTile(Tile.feelsBad, 0, 0);
			//world.setTile(Tile.feelsBad, 63, 63);
			
			
		}
	}
	private void render() {
		glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);
		//bgTexture.bind();
		
		int error = glGetError();
		if (error != GL_NO_ERROR)
			System.out.println(error);
		
		window.swapBuffers();
	}
	
	public static void main(String[] args){
		new Game2();
}
}
